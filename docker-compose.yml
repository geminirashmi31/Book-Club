version: '3.4'

networks:
  frontend:
  backend:

services:
  bookapi:
    image: ${DOCKER_REGISTRY-}bookapi
    build:
      context: .
      dockerfile: BookAPI/Dockerfile
    environment:
       DatabaseServer: mssqlserver
       DatabaseName: BookDb
       DatabaseUser: sa
       DatabaseUserPassword: BookApi(!)
       ExternalBooksBaseUrl: http://localhost:6001
    container_name: bookapi
    ports:
       - "6001:80"
    networks:
       - backend
       - frontend
    depends_on:
       - mssqlserver

  tokenserver:
    build:
      context: .\TokenServiceApi
      dockerfile: Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      MvcClient: http://localhost:6015
      BasketApiClient: http://localhost:5050
    container_name: tokenserviceapi
    ports:
       - "5030:80"
    networks:
       - backend
       - frontend
    depends_on:
       - mssqlserver

  cart:
    image: cartimage
    build:
      context: .\CartApi
      dockerfile: Dockerfile
    environment:
       ASPNETCORE_ENVIRONMENT: Development
       IdentityUrl: http://tokenserver
       ConnectionString: basket.data
    container_name: cartapi
    ports:
       - "5050:80"
    networks:
       - backend
       - frontend
    depends_on:
       - basket.data
       - tokenserver
       - rabbitmq

  webmvc:
    build:
      context: .
      dockerfile: WebMvc/Dockerfile
    environment:
       ASPNETCORE_ENVIRONMENT: Development
       BookUrl: http://bookapi
       IdentityUrl: http://10.0.0.83:5030
       CallBackUrl: http://localhost:6015
       CartUrl: http://cart
       OrderUrl: http://order
    container_name: bookWebShop
    ports:
       - "6015:80"
    networks:
       - frontend
    depends_on:
       - bookapi
       - tokenserver
       - cart
       - order

  order:
    image: "books/order"
    build: 
      context: .\OrderApi
      dockerfile: Dockerfile
    environment:
       ASPNETCORE_ENVIRONMENT: Development
       IdentityUrl: http://tokenserver
       SQLSERVER_HOST: bookdb
       SA_PASSWORD: BookApi(!)
       DATABASE: OrdersDb
    container_name: orderapi
    ports:
       - "5600:80"
    networks:
        - backend
        - frontend
    depends_on:
        - mssqlserver
        - tokenserver
        - rabbitmq


  mssqlserver:
    image: "microsoft/mssql-server-linux:latest"
    environment:
        ACCEPT_EULA: Y
        SA_PASSWORD: BookApi(!)
    ports:
        - "7016:1433"
    networks:
        - backend

  basket.data:
    image: redis
    ports: 
        - "6378:6379"
    networks:
        - backend

  rabbitmq:
     image: rabbitmq:3-management
     container_name: rabbitmq
     hostname: myrabbitmq
     ports: 
        - "15672:15672"
        - "5672:5672"
        - "5671:5671"
     volumes:
        - ~/rabbitmq:/var/lib/rabbitmq/mnesia
     networks:
        - backend
