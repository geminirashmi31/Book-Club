version: '3.4'

networks:
  frontend:
  backend:

services:
  bookapi:
    image: ${DOCKER_REGISTRY-}bookapi
    build:
      context: .
      dockerfile: BookAPI/Dockerfile
    environment:
       DatabaseServer: bookdb
       DatabaseName: BookDb
       DatabaseUser: sa
       DatabaseUserPassword: BookApi(!)
       ExternalBooksBaseUrl: http://192.168.99.100:6001
    container_name: bookapi
    ports:
       - "6001:80"
    networks:
       - backend
       - frontend
    depends_on:
       - mssqlserver
 
  tokenserver:
    build:
      context: .
      dockerfile: TokenServiceApi/Dockerfile
    environment:
       ASPNETCORE_ENVIRONMENT: Development
       MvcClient: http://192.168.99.100:5200
       DatabaseServer: bookdb
       DatabaseName: BookDb
       DatabaseUser: sa
       DatabaseUserPassword: BookApi(!)
    container_name: tokenserviceapi
    ports:
       - "5020:80"
    networks:
       - backend
       - frontend
    depends_on:
       - mssqlserver

  webmvc:
     build: 
       context: .
       dockerfile: WebMvc/Dockerfile
     environment: 
       ASPNETCORE_ENVIRONMENT: Development 

       BooksUrl: http://books
       IdentityUrl: http://10.0.75.1:5020
       CallBackUrl: http://localhost:5200
     container_name: webbooks

       BooksUrl: http://bookapi
       IdentityUrl: http://192.168.99.100:5020
       CallBackUrl: http://192.168.99.100:5200
     container_name: web

     ports:
       - "5200:80"
     networks:
       - frontend 
     depends_on:
       - bookapi
       - tokenserver
           
  mssqlserver:
    image: "microsoft/mssql-server-linux:latest"
    environment:
        ACCEPT_EULA: Y
        SA_PASSWORD: BookApi(!)
    container_name: bookdb
    ports:
        - "7016:1433"
    networks:
        - backend
